Transform a1 : TRS {
  rotation { 0.0, 0.0, 1.0, -2.0 }
}

Transform a2 : TRS {
  rotation { 0.0, 0.0, 1.0, 2.0 }
}

// Camera camera : Pinhole {
//   film { @film }
//   position { 0, 0, 2 }
//   target { 0, 0, 0 }
//   fov { 50 }
//   transform : LinearTRSAnimation {
//     time_points { 1.0, 2.0 }
//     transforms { @a1, @a2 }
//   }
// }

Light light : Point {
  position { 0, 2, 0 }
  emission { 10, 10, 10 }
}

Integrator integrator : Normal {}

Shape bunny_ref : TriangleMesh {
  path { "../meshes/bunny/bunny.obj" }
  subdiv { 2 }
}

Shape bunny : Instance {
  reference { @bunny_ref }
  transform : TRS {
    scaling { 0.5 }
    translation { 0.2, -0.3, 0.0 }
    rotation { 0.0, 1.0, 0.0, 15.0 }
  }
}

Light area_light : DiffuseArea {
  emission { 10 }
  shape { @bunny }
}

Light area_light_2 : DiffuseArea {
  emission { 10 }
  shape { @bunny }
}

Transform b1 : TRS {
  scaling { 0.5 }
  translation { -0.7, -0.3, -2.0 }
  rotation { 0.0, 1.0, 0.0, -15.0 }
}

Transform b2 : TRS {
  scaling { 0.5 }
  translation { -0.3, -0.3, -1.0 }
  rotation { 0.0, 1.0, 0.0, -15.0 }
}

Shape bunny2 : Instance {
  reference { @bunny_ref }
  transform : LinearTRSAnimation {
    time_points { 1.0, 2.0 }
    transforms { @b1, @b2 }
  }
}

Shape cube : TriangleMesh {
  path { "../meshes/sphere/sphere.obj" }
  transform : TRS {
    scaling { 0.2 }
    translation { -0.3, 0.0, 0.0 }
  }
  subdiv { 2 }
}

Light light : Point {
  position { 0.0, 3.0, 3.0 }
  emission { 15 }
}

Light light2 : Point {
  position { 0.0, 3.0, 3.0 }
  emission { 15 }
}

Filter filter : MitchellNetravali {
// filter : Triangle {
// filter : Gaussian {
  radius { 16.0 }
  alpha { 16.0 }
  b { 0.33333333333333 }
  c { 0.33333333333333 }
}

Film film : RGB {
  resolution { 1200, 800 }
//  filter { @filter }
}

Camera camera : ThinLens {
  film { @film }
  position { 0, 0, 2 }
  target { 0, 0, 0 }
  sensor_size { 36, 24 }
  f_number { 1.2 }
  focal_length { 35 }
//   transform : LinearTRSAnimation {
//     time_points { 1.0, 2.0 }
//     transforms { @a1, @a2 }
//   }
}

render : SingleShot {
  integrator { @integrator }
  sampler : Independent {
    spp { 1024 }
  }
  camera { @camera }
  shapes { @bunny, @bunny2, @cube }
  lights { @light }
  output { "bunny_camera.exr" }
  shutter_duration { 1.0, 2.0 }
  shutter_samples { 256 }
}
