Film film : RGB {
  resolution { 1280, 800 }
}

Camera camera : ThinLens {
  film { @film }
  position { 0, 0, 2.5 }
  target { 0, 0, 0 }
  sensor_size { 36, 24 }
  f_number { 1.2 }
  focal_length { 50 }
  up { 0, 1, 0 }
}

Integrator integrator : Normal {}

Shape cube : TriangleMesh {
  path { "../meshes/cube/cube.obj" }
}

Shape ceiling : Instance {
  reference { @cube }
  transform : TRS {
    translation { 0, 1, 0 }
  }
}

Shape floor : Instance {
  reference { @cube }
  transform : TRS {
    translation { 0, -1, 0 }
  }
}

Shape back_wall : Instance {
  reference { @cube }
  transform : TRS {
    translation { 0, 0, -1 }
  }
}

Shape left_wall : Instance {
  reference { @cube }
  transform : TRS {
    translation { -1, 0, 0 }
  }
}

Shape right_wall : Instance {
  reference { @cube }
  transform : TRS {
    translation { 1, 0, 0 }
  }
}

Shape cow : TriangleMesh {
  path { "../meshes/cow/cow.ply" }
  transform : TRS {
    scaling { 3.5, 3.5, 3.5 }
    rotation { 0, 1, 0, -45 }
    translation { -0.1, -0.5, 0.1 }
  }
}

Shape nanosuit : TriangleMesh {
  path { "../meshes/nanosuit/nanosuit.ply" }
  transform : TRS {
    scaling { 0.035, 0.035, 0.035 }
    rotation { 0, 1, 0, -30 }
    translation { 0.25, -0.5, 0 }
  }
}

Light light : Point {
  position { 0, 0, 0 }
  emission { 10, 10, 10 }
}

render : SingleShot {
  integrator { @integrator }
  sampler : Independent {
    spp { 1024 }
  }
  camera { @camera }
  shapes { @left_wall, @right_wall, @back_wall, @ceiling, @floor, @cow, @nanosuit }
  lights { @light }
  output { "test.exr" }
}
